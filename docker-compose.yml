version: '3.8'

services:
  spark-master:
    image: bitnami/spark:3.5.1
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
    volumes:
      - ./spark-data:/opt/spark-data
    networks:
      - movielens-net

  spark-worker:
    image: bitnami/spark:3.5.1
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=4  # Zdena mn 2 l 4
      - SPARK_WORKER_MEMORY=4g  # Zdena mn 2g l 4g
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
    volumes:
      - ./spark-data:/opt/spark-data
    networks:
      - movielens-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=your_elastic_password
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - movielens-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=your_elastic_password
    networks:
      - movielens-net

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    depends_on:
      - elasticsearch
      - spark-master
    ports:
      - "5000:5000"
    volumes:
      - ./app:/app
      - ./spark-data:/opt/spark-data
    command: python /app/app.py
    networks:
      - movielens-net

networks:
  movielens-net:
    driver: bridge

volumes:
  spark-data:
  es-data: